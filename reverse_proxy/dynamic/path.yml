http:
  # ==========================================
  # ROUTERS - Define URL routing rules
  # ==========================================
  routers:
    # Frontend (Root path)
    frontend:
      rule: "Host(`localhost`)"
      entryPoints:
        - web
      service: frontend

    # User Microservice Routes
    user-service:
      rule: "Host(`localhost`) && PathPrefix(`/api/users`)"
      entryPoints:
        - web
      middlewares:
        - auth-basic
        - strip-users-prefix
      service: user-service

    # Device Microservice Routes
    device-service:
      rule: "Host(`localhost`) && PathPrefix(`/api/devices`)"
      entryPoints:
        - web
      middlewares:
        - auth-basic
        - strip-devices-prefix
      service: device-service

  # ==========================================
  # MIDDLEWARES - Transform and validate requests
  # ==========================================
  middlewares:
    # Basic authentication for API endpoints
    auth-basic:
      basicAuth:
        users:
          - "user:$apr1$H6uskkkW$IgXLP6ewTrSuBkTrqE8wj/"  # password = "test"

    # Remove /api/users prefix before forwarding to microservice
    strip-users-prefix:
      stripPrefix:
        prefixes:
          - "/api/users"

    # Remove /api/devices prefix before forwarding to microservice
    strip-devices-prefix:
      stripPrefix:
        prefixes:
          - "/api/devices"

  # ==========================================
  # SERVICES - Backend endpoints
  # ==========================================
  services:
    frontend:
      loadBalancer:
        servers:
          - url: "http://frontend:80"

    user-service:
      loadBalancer:
        servers:
          - url: "http://user-service:8080"
        healthCheck:
          path: /users
          interval: "30s"
          timeout: "5s"

    device-service:
      loadBalancer:
        servers:
          - url: "http://device-service:8080"
        healthCheck:
          path: /devices
          interval: "30s"
          timeout: "5s"