{
  "info": {
    "name": "User Microservice API",
    "_postman_id": "user-microservice-api",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    { "key": "baseUrl", "value": "http://localhost:8080" },
    { "key": "resource", "value": "users" },
    { "key": "userId", "value": "" }
  ],
  "item": [
    {
      "name": "GET – List all users (200)",
      "request": {
        "method": "GET",
        "header": [{ "key": "Accept", "value": "application/json" }],
        "url": { "raw": "{{baseUrl}}/{{resource}}", "host": ["{{baseUrl}}"], "path": ["{{resource}}"] }
      }
    },
    {
      "name": "GET – List users by role ADMIN (200)",
      "request": {
        "method": "GET",
        "header": [{ "key": "Accept", "value": "application/json" }],
        "url": { "raw": "{{baseUrl}}/{{resource}}/role/ADMIN", "host": ["{{baseUrl}}"], "path": ["{{resource}}", "role", "ADMIN"] }
      }
    },
    {
      "name": "GET – List users by role CLIENT (200)",
      "request": {
        "method": "GET",
        "header": [{ "key": "Accept", "value": "application/json" }],
        "url": { "raw": "{{baseUrl}}/{{resource}}/role/CLIENT", "host": ["{{baseUrl}}"], "path": ["{{resource}}", "role", "CLIENT"] }
      }
    },
    {
      "name": "POST – Create admin user (201) [valid]",
      "request": {
        "method": "POST",
        "header": [{ "key": "Content-Type", "value": "application/json" }],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"username\": \"admin\",\n  \"password\": \"admin123\",\n  \"email\": \"admin@energymanagement.com\",\n  \"name\": \"System Administrator\",\n  \"role\": \"ADMIN\"\n}"
        },
        "url": { "raw": "{{baseUrl}}/{{resource}}", "host": ["{{baseUrl}}"], "path": ["{{resource}}"] }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Created', ()=> pm.response.to.have.status(201));",
              "let id = null;",
              "const loc = pm.response.headers.get('Location');",
              "if (loc) { id = loc.split('/').slice(-1)[0]; }",
              "pm.expect(id, 'Extracted userId').to.be.ok;",
              "pm.collectionVariables.set('userId', id);"
            ]
          }
        }
      ]
    },
    {
      "name": "POST – Create client user (201) [valid]",
      "request": {
        "method": "POST",
        "header": [{ "key": "Content-Type", "value": "application/json" }],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"username\": \"johndoe\",\n  \"password\": \"password123\",\n  \"email\": \"john.doe@example.com\",\n  \"name\": \"John Doe\",\n  \"role\": \"CLIENT\"\n}"
        },
        "url": { "raw": "{{baseUrl}}/{{resource}}", "host": ["{{baseUrl}}"], "path": ["{{resource}}"] }
      }
    },
    {
      "name": "GET – Get user by ID (200)",
      "request": {
        "method": "GET",
        "header": [{ "key": "Accept", "value": "application/json" }],
        "url": { "raw": "{{baseUrl}}/{{resource}}/{{userId}}", "host": ["{{baseUrl}}"], "path": ["{{resource}}", "{{userId}}"] }
      }
    },
    {
      "name": "POST – Username too short (400) [@Size]",
      "request": {
        "method": "POST",
        "header": [{ "key": "Content-Type", "value": "application/json" }],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"username\": \"ab\",\n  \"password\": \"password123\",\n  \"email\": \"test@example.com\",\n  \"name\": \"Test User\",\n  \"role\": \"CLIENT\"\n}"
        },
        "url": { "raw": "{{baseUrl}}/{{resource}}", "host": ["{{baseUrl}}"], "path": ["{{resource}}"] }
      }
    },
    {
      "name": "POST – Password too short (400) [@Size]",
      "request": {
        "method": "POST",
        "header": [{ "key": "Content-Type", "value": "application/json" }],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"username\": \"testuser\",\n  \"password\": \"pass\",\n  \"email\": \"test@example.com\",\n  \"name\": \"Test User\",\n  \"role\": \"CLIENT\"\n}"
        },
        "url": { "raw": "{{baseUrl}}/{{resource}}", "host": ["{{baseUrl}}"], "path": ["{{resource}}"] }
      }
    },
    {
      "name": "POST – Missing username (400) [@NotBlank]",
      "request": {
        "method": "POST",
        "header": [{ "key": "Content-Type", "value": "application/json" }],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"password\": \"password123\",\n  \"email\": \"test@example.com\",\n  \"name\": \"Test User\",\n  \"role\": \"CLIENT\"\n}"
        },
        "url": { "raw": "{{baseUrl}}/{{resource}}", "host": ["{{baseUrl}}"], "path": ["{{resource}}"] }
      }
    },
    {
      "name": "POST – Invalid email format (400) [@Email]",
      "request": {
        "method": "POST",
        "header": [{ "key": "Content-Type", "value": "application/json" }],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"username\": \"testuser\",\n  \"password\": \"password123\",\n  \"email\": \"invalid-email\",\n  \"name\": \"Test User\",\n  \"role\": \"CLIENT\"\n}"
        },
        "url": { "raw": "{{baseUrl}}/{{resource}}", "host": ["{{baseUrl}}"], "path": ["{{resource}}"] }
      }
    },
    {
      "name": "POST – Duplicate username (409)",
      "request": {
        "method": "POST",
        "header": [{ "key": "Content-Type", "value": "application/json" }],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"username\": \"admin\",\n  \"password\": \"password123\",\n  \"email\": \"another@example.com\",\n  \"name\": \"Another Admin\",\n  \"role\": \"ADMIN\"\n}"
        },
        "url": { "raw": "{{baseUrl}}/{{resource}}", "host": ["{{baseUrl}}"], "path": ["{{resource}}"] }
      }
    },
    {
      "name": "PUT – Update user (204)",
      "request": {
        "method": "PUT",
        "header": [{ "key": "Content-Type", "value": "application/json" }],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"username\": \"admin\",\n  \"password\": \"newpassword123\",\n  \"email\": \"admin.updated@energymanagement.com\",\n  \"name\": \"Updated Administrator\",\n  \"role\": \"ADMIN\"\n}"
        },
        "url": { "raw": "{{baseUrl}}/{{resource}}/{{userId}}", "host": ["{{baseUrl}}"], "path": ["{{resource}}", "{{userId}}"] }
      }
    },
    {
      "name": "DELETE – Remove user (204)",
      "request": {
        "method": "DELETE",
        "url": { "raw": "{{baseUrl}}/{{resource}}/{{userId}}", "host": ["{{baseUrl}}"], "path": ["{{resource}}", "{{userId}}"] }
      }
    },
    {
      "name": "DELETE – User not found (404)",
      "request": {
        "method": "DELETE",
        "url": { "raw": "{{baseUrl}}/{{resource}}/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa", "host": ["{{baseUrl}}"], "path": ["{{resource}}", "aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"] }
      }
    }
  ]
}